{"name":"Pebble Assist","tagline":"A small collection of C macros that make developing Pebble apps a little simpler.","body":"# Pebble Assist\r\n\r\nPebble Assist is a small collection of [C macros][1] that make developing Pebble apps a little simpler.\r\n\r\n## Usage\r\n\r\nDownload the contents of this repository, or clone it as a submodule or subtree. I recommend having a libs subfolder in your Pebble app's src folder.\r\n\r\nInclude pebble-assist.h in your source code.\r\n\r\n```c\r\n#include \"libs/pebble-assist/pebble-assist.h\"\r\n```\r\n\r\n## Documentation\r\n\r\n### Logging\r\n\r\nShorthand wrappers for using APP_LOG with the various levels of logs.\r\n\r\n```c\r\n// Create a new DEBUG log message. Similar functions exist for INFO, WARN and ERROR.\r\nDEBUG(\"Here is a logging message of value %d\", 5);\r\n```\r\n\r\n### Layer Helpers\r\n\r\nThere are a number of macros for creating layers, and the various subtypes of layers. Below are some examples, check out the source code for the full list.\r\n\r\n```c\r\n// Creates a new layer that is the size of the window, and adds it to the window. \r\n// Similarly named functions exist for all layer types.\r\nLayer* layer = layer_create_fullscreen(window);\r\nlayer_add_to_window(layer, window);\r\n```\r\n\r\n```c\r\n// The menu layer version of this function also handles assigning the click handlers.\r\nmenu_layer_add_to_window(menu, window);\r\n```\r\n\r\n```c\r\n// Prevent crashes caused by attempting to destroy an already destroyed layer, \r\n// the `*_destroy_safe()` functions wrap destroy in a NULL check.\r\nlayer_destroy_safe(layer);\r\n```\r\n\r\n```c\r\n// Show a hidden layer.\r\nlayer_show(layer);\r\n// Hide a layer.\r\nlayer_hide(layer);\r\n```\r\n\r\n\r\n### Persistent Helpers\r\n\r\nCheck that a persistent key exists before reading it, and returning a default value if it doesn't.\r\n\r\n```c\r\n// If KEY_NUMBER exists, return the value stored there, otherwise return -1\r\nint number = persist_read_int_safe(KEY_NUMBER, -1);\r\n```\r\n\r\n### Miscelleanous\r\n\r\n```c\r\n// Checks that data is not NULL before attempting to free.\r\nfree_safe(data);\r\n```\r\n\r\n```c\r\n// Checks that the app timer exists before attempting to cancel.\r\napp_timer_cancel_safe(timer);\r\n```\r\n\r\n```c\r\n// Opens the app message with the maximum inbox and outbox size.\r\napp_message_open_max();\r\n```\r\n\r\n[1]: http://gcc.gnu.org/onlinedocs/cpp/Macros.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}